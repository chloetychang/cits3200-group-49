"""Initial Migration

Revision ID: 028a0aa4d9bf
Revises: 
Create Date: 2025-09-17 21:39:34.030521

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '028a0aa4d9bf'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

def upgrade() -> None:
    """Upgrade schema."""
    # Set PK columns as identity/auto-increment - used to fix issues with planting_id being null.
    # Instead, it will auto increment ids by 1 based on last entry id for a successful POST request. 
    op.execute("ALTER TABLE aspect ALTER COLUMN aspect_id ADD GENERATED BY DEFAULT AS IDENTITY")
    op.execute("ALTER TABLE bioregion ALTER COLUMN bioregion_code ADD GENERATED BY DEFAULT AS IDENTITY")
    op.execute("ALTER TABLE conservation_status ALTER COLUMN conservation_status_id ADD GENERATED BY DEFAULT AS IDENTITY")
    op.execute("ALTER TABLE container ALTER COLUMN container_type_id ADD GENERATED BY DEFAULT AS IDENTITY")
    op.execute("ALTER TABLE family ALTER COLUMN family_id ADD GENERATED BY DEFAULT AS IDENTITY")
    op.execute("ALTER TABLE genetic_source ALTER COLUMN genetic_source_id ADD GENERATED BY DEFAULT AS IDENTITY")
    op.execute("ALTER TABLE genus ALTER COLUMN genus_id ADD GENERATED BY DEFAULT AS IDENTITY")
    op.execute("ALTER TABLE location_type ALTER COLUMN location_type_id ADD GENERATED BY DEFAULT AS IDENTITY")
    op.execute("ALTER TABLE plant_utility ALTER COLUMN plant_utility_id ADD GENERATED BY DEFAULT AS IDENTITY")
    op.execute("ALTER TABLE planting ALTER COLUMN planting_id ADD GENERATED BY DEFAULT AS IDENTITY")
    op.execute("ALTER TABLE propagation_type ALTER COLUMN propagation_type_id ADD GENERATED BY DEFAULT AS IDENTITY")
    op.execute("ALTER TABLE provenance ALTER COLUMN provenance_id ADD GENERATED BY DEFAULT AS IDENTITY")
    op.execute("ALTER TABLE removal_cause ALTER COLUMN removal_cause_id ADD GENERATED BY DEFAULT AS IDENTITY")
    op.execute("ALTER TABLE role ALTER COLUMN role_id ADD GENERATED BY DEFAULT AS IDENTITY")
    op.execute("ALTER TABLE species ALTER COLUMN species_id ADD GENERATED BY DEFAULT AS IDENTITY")
    op.execute("ALTER TABLE sub_zone ALTER COLUMN sub_zone_id ADD GENERATED BY DEFAULT AS IDENTITY")
    op.execute("ALTER TABLE supplier ALTER COLUMN supplier_id ADD GENERATED BY DEFAULT AS IDENTITY")
    op.execute("ALTER TABLE \"user\" ALTER COLUMN user_id ADD GENERATED BY DEFAULT AS IDENTITY")
    op.execute("ALTER TABLE variety ALTER COLUMN variety_id ADD GENERATED BY DEFAULT AS IDENTITY")
    op.execute("ALTER TABLE zone ALTER COLUMN zone_id ADD GENERATED BY DEFAULT AS IDENTITY")
    op.alter_column('genetic_source', 'genetic_source_id',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('genetic_source', 'landscape_only',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.create_foreign_key(None, 'genetic_source', 'genetic_source', ['female_genetic_source'], ['genetic_source_id'])
    op.create_foreign_key(None, 'genetic_source', 'genetic_source', ['male_genetic_source'], ['genetic_source_id'])
    op.alter_column('propagation_type', 'needs_two_parents',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('propagation_type', 'can_cross_genera',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.create_foreign_key(None, 'sub_zone', 'aspect', ['aspect_id'], ['aspect_id'])
    op.alter_column('supplier', 'is_a_research_breeder',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.create_foreign_key(None, 'variety', 'genetic_source', ['genetic_source_id'], ['genetic_source_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'variety', type_='foreignkey')
    op.alter_column('supplier', 'is_a_research_breeder',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.drop_constraint(None, 'sub_zone', type_='foreignkey')
    op.alter_column('propagation_type', 'can_cross_genera',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('propagation_type', 'needs_two_parents',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.drop_constraint(None, 'genetic_source', type_='foreignkey')
    op.drop_constraint(None, 'genetic_source', type_='foreignkey')
    op.alter_column('genetic_source', 'landscape_only',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('genetic_source', 'genetic_source_id',
               existing_type=sa.INTEGER(),
               server_default=sa.Identity(always=False, start=96, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1),
               existing_nullable=False,
               autoincrement=True)
    # ### end Alembic commands ###
